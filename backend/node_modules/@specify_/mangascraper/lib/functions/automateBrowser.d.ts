import { Page } from 'puppeteer';
import { ScrapingOptions } from '..';
export declare type AutomatedCallback<T> = (page: Page) => Promise<T>;
export interface BrowserNetworkOptions {
    domains?: {
        method: 'block' | 'unblock';
        value: string[];
    };
    resource?: {
        method: 'block' | 'unblock';
        type: ('document' | 'stylesheet' | 'image' | 'media' | 'font' | 'script' | 'texttrack' | 'xhr' | 'fetch' | 'eventsource' | 'websocket' | 'manifest' | 'signedexchange' | 'ping' | 'cspviolationreport' | 'preflight' | 'other')[];
    };
}
export default function automateBrowser<T>(options: ScrapingOptions, callback: AutomatedCallback<T>, network?: BrowserNetworkOptions): Promise<T>;
//# sourceMappingURL=automateBrowser.d.ts.map